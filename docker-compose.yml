version: "3.8"

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=orthotics_portal
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash -c "cd /app && ./scripts/migrate.sh && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - backend_static_volume:/app/staticfiles
      - backend_media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://postgres:postgres@db/orthotics_portal
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A orthotics_portal worker -l info
    volumes:
      - ./backend:/app
      - backend_media_volume:/app/mediafiles
    env_file:
      - ./.env
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://postgres:postgres@db/orthotics_portal
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - backend

volumes:
  postgres_data:
  backend_static_volume:
  backend_media_volume:
